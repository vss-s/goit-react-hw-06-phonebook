{"version":3,"sources":["redux/contactReducer/contactSlice.js","redux/filterReducer/filterSlice.js","redux/rootReducer.js","redux/store.js","components/Section/Section.js","redux/contactReducer/contactSelectors.js","components/PhoneBookFields/PhoneBookFields.js","helpers/helpers.js","components/PhoneBookFields/PhoneBookFieldsContainer.js","components/PhoneBookListItem/PhoneBookListItem.js","components/PhoneBookListItem/PhoneBookListItemContainer.js","components/PhoneBookList/PhoneBookList.js","redux/filterReducer/filterSelectors.js","components/PhoneBookList/PhoneBookListContainer.js","components/PhoneBookSearchField/PhoneBookSearchField.js","components/PhoneBookSearchField/PhoneBookSearchFieldContainer.js","components/PhoneBookLogo/PhoneBookLogo.js","App/App.js","App/AppContainer.js","index.js","Transitions/slideTransition.module.css","components/PhoneBookFields/PhoneBookFields.module.css","components/PhoneBookListItem/PhoneBookListItem.module.css","components/Section/Section.module.css","components/PhoneBookSearchField/PhoneBookSearchField.module.css","components/PhoneBookList/PhoneBookList.module.css","components/PhoneBookLogo/PhoneBookLogo.module.css"],"names":["contactSlice","createSlice","name","initialState","reducers","addContact","state","action","payload","deleteContact","filter","item","id","filterSlice","changeQuery","rootReducer","combineReducers","contacts","reducer","persistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistedReducer","persistReducer","store","configureStore","persistor","persistStore","Section","title","isActive","children","CSSTransition","in","timeout","classNames","slideTransition","mountOnEnter","unmountOnExit","className","Styles","container","getContacts","toast","configure","validationSchema","Yup","shape","max","min","required","number","matches","PhoneBookFields","onAddContact","phoneBookItems","initialValues","onSubmit","values","actions","newContact","some","toLowerCase","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","uuidv4","resetForm","props","touched","errors","handleChange","handleBlur","inputLabel","htmlFor","invalidMessage","inputFieldError","inputField","type","value","onChange","onBlur","placeholder","Btn","icon","checkCircle","color","width","height","connect","dispatch","obj","PhoneBookListItem","handleDelete","onDeleteContact","contact","this","listItem","onClick","xIcon","Component","getOnDeleteContact","PhoneBookList","query","filterQuery","filteredQuery","includes","TransitionGroup","component","map","transitionsStyle","getFilterQuery","PhoneBookSearchField","onChangeQuery","searchField","target","getFilterOnChangeQuery","PhoneBookLogo","setTimeout","setState","logo","App","length","ReactDOM","render","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.26f8e0f4.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: [],\n  reducers: {\n    addContact: (state, action) => [...state, action.payload],\n    deleteContact: (state, action) =>\n      state.filter(item => item.id !== action.payload),\n  },\n});\n\nexport default contactSlice;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    changeQuery: (state, action) => action.payload,\n  },\n});\n\nexport default filterSlice;\n","import { combineReducers } from 'redux';\nimport contactSlice from './contactReducer/contactSlice';\nimport filterSlice from './filterReducer/filterSlice';\n\nconst rootReducer = combineReducers({\n  contacts: contactSlice.reducer,\n  filter: filterSlice.reducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['contacts'],\n};\n\n// code below need to solve problem with 'A non-serializable value'\n// link to issue https://github.com/rt2zz/redux-persist/issues/988\n\nconst defaultMiddlewareConfig = {\n  serializableCheck: {\n    ignoredActions: ['persist/PERSIST'],\n  },\n};\n\nconst middleware = [...getDefaultMiddleware(defaultMiddlewareConfig)];\n\n///////////////\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Section.module.css';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\n\nconst Section = ({ title = '', isActive, children }) => {\n  return (\n    <CSSTransition\n      in={isActive}\n      timeout={500}\n      classNames={slideTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <section className={Styles.container}>\n        <h1 className={Styles.title}>{title}</h1>\n        {children}\n      </section>\n    </CSSTransition>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","export const getContacts = state => state.contacts;\n\nexport const getOnDeleteContact = (reducer, id) =>\n  reducer.actions.deleteContact(id);\n\nexport const getOnAddContact = (reducer, newContact) =>\n  reducer.actions.addContact(newContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Field, Form, Formik } from 'formik';\nimport { Icon } from '@iconify/react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport { CSSTransition } from 'react-transition-group';\nimport checkCircle from '@iconify/icons-cil/check-circle';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookFields.module.css';\nimport { checkContactForUnique } from '../../helpers/helpers';\n\ntoast.configure();\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(20, 'Must be 20 characters or less')\n    .min(2, 'Must be 2 characters or more')\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{2}(-|\\s)\\d{2}$/,\n      'Telephone number should be like: 000-00-00',\n    )\n    .required('Required'),\n});\n\nconst PhoneBookFields = ({ onAddContact, phoneBookItems }) => (\n  <>\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        if (checkContactForUnique(phoneBookItems, values)) {\n          toast.error('This contact is alredy exist', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          return;\n        }\n        onAddContact({ ...values, id: uuidv4() });\n        actions.resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {props => {\n        const { values, touched, errors, handleChange, handleBlur } = props;\n        return (\n          <Form className={Styles.container}>\n            <label className={Styles.inputLabel} htmlFor=\"name\">\n              Name\n            </label>\n\n            <CSSTransition\n              in={errors.name && touched.name}\n              classNames={slideTransition}\n              timeout={500}\n              mountOnEnter\n              unmountOnExit\n            >\n              <div className={Styles.invalidMessage}>{errors.name}</div>\n            </CSSTransition>\n\n            <Field\n              className={\n                errors.name && touched.name\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name=\"name\"\n              placeholder=\"Put contact name\"\n            />\n\n            <label className={Styles.inputLabel} htmlFor=\"number\">\n              Number\n            </label>\n\n            {\n              <CSSTransition\n                in={errors.number && touched.number}\n                classNames={slideTransition}\n                timeout={500}\n                mountOnEnter\n                unmountOnExit\n              >\n                <div className={Styles.invalidMessage}>{errors.number}</div>\n              </CSSTransition>\n            }\n\n            <Field\n              className={\n                errors.number && touched.number\n                  ? Styles.inputFieldError\n                  : Styles.inputField\n              }\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number format 000-00-00\"\n            />\n            <button type=\"submit\" className={Styles.Btn}>\n              <Icon\n                icon={checkCircle}\n                color=\"blue\"\n                width=\"70px\"\n                height=\"50px\"\n              />\n            </button>\n          </Form>\n        );\n      }}\n    </Formik>\n  </>\n);\n\nPhoneBookFields.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  phoneBookItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default PhoneBookFields;\n","export const filterContactList = (contactsArr, query) =>\n  contactsArr.filter(item =>\n    item.name.toLowerCase().includes(query.toLowerCase()),\n  );\n\nexport const checkContactForUnique = (contactsArr, newContact) =>\n  contactsArr.some(\n    item => item.name.toLowerCase() === newContact.name.toLowerCase(),\n  );\n","import { connect } from 'react-redux';\nimport contactSlice from '../../redux/contactReducer/contactSlice';\nimport {\n  getContacts,\n  getOnAddContact,\n} from '../../redux/contactReducer/contactSelectors';\nimport PhoneBookFields from './PhoneBookFields';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: obj => dispatch(getOnAddContact(contactSlice, obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookFields);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport xIcon from '@iconify/icons-cil/x';\nimport Styles from './PhoneBookListItem.module.css';\n\nexport default class PhoneBookListItem extends Component {\n  static propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contact: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  handleDelete = () => {\n    const { onDeleteContact, contact } = this.props;\n    onDeleteContact(contact.id);\n  };\n\n  render() {\n    const { name, number } = this.props.contact;\n    return (\n      <li className={Styles.listItem}>\n        <span className={Styles.name}>\n          {name} : {number}\n        </span>\n        <button\n          onClick={this.handleDelete}\n          className={Styles.Btn}\n          type=\"button\"\n        >\n          <Icon icon={xIcon} color=\"red\" width=\"40px\" height=\"40px\" />\n        </button>\n      </li>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport contactSlice from '../../redux/contactReducer/contactSlice';\nimport PhoneBookListItem from './PhoneBookListItem';\nimport { getOnDeleteContact } from '../../redux/contactReducer/contactSelectors';\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(getOnDeleteContact(contactSlice, id)),\n});\n\nexport default connect(null, mapDispatchToProps)(PhoneBookListItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { filterContactList } from '../../helpers/helpers';\nimport PhoneBookListItem from '../PhoneBookListItem/PhoneBookListItemContainer';\nimport Styles from './PhoneBookList.module.css';\nimport transitionsStyle from '../../Transitions/slideTransition.module.css';\n\nconst PhoneBookList = ({ phoneBookItems, filterQuery }) => {\n  const filteredQuery = filterContactList(phoneBookItems, filterQuery);\n\n  return (\n    <TransitionGroup component=\"ul\" className={Styles.container}>\n      {filteredQuery.map(contact => (\n        <CSSTransition\n          in\n          timeout={500}\n          classNames={transitionsStyle}\n          key={contact.id}\n          unmountOnExit\n        >\n          <PhoneBookListItem contact={contact} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nPhoneBookList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  phoneBookItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ).isRequired,\n  filterQuery: PropTypes.string,\n};\n\nexport default PhoneBookList;\n","export const getFilterQuery = state => state.filter;\n\nexport const getFilterOnChangeQuery = (reducer, query) =>\n  reducer.actions.changeQuery(query);\n","import { connect } from 'react-redux';\nimport PhoneBookList from './PhoneBookList';\nimport { getFilterQuery } from '../../redux/filterReducer/filterSelectors';\nimport { getContacts } from '../../redux/contactReducer/contactSelectors';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: getContacts(state),\n  filterQuery: getFilterQuery(state),\n});\n\nexport default connect(mapStateToProps)(PhoneBookList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookSearchField.module.css';\n\nconst PhoneBookSearchField = ({ filterQuery, onChangeQuery, isActive }) => (\n  <CSSTransition\n    in={isActive}\n    mountOnEnter\n    unmountOnExit\n    timeout={500}\n    classNames={slideTransition}\n  >\n    <div className={Styles.container}>\n      <input\n        className={Styles.searchField}\n        type=\"text\"\n        name=\"filterQuery\"\n        value={filterQuery}\n        onChange={({ target }) => onChangeQuery(target.value)}\n        placeholder=\"Search contact...\"\n      />\n    </div>\n  </CSSTransition>\n);\n\nPhoneBookSearchField.propTypes = {\n  filterQuery: PropTypes.string.isRequired,\n  onChangeQuery: PropTypes.func.isRequired,\n  isActive: PropTypes.bool,\n};\n\nexport default PhoneBookSearchField;\n","import { connect } from 'react-redux';\nimport filterSlice from '../../redux/filterReducer/filterSlice';\nimport PhoneBookSearchField from './PhoneBookSearchField';\nimport {\n  getFilterQuery,\n  getFilterOnChangeQuery,\n} from '../../redux/filterReducer/filterSelectors';\n\nconst mapStateToProps = state => ({\n  filterQuery: getFilterQuery(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeQuery: query => dispatch(getFilterOnChangeQuery(filterSlice, query)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PhoneBookSearchField);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransition from '../../Transitions/slideTransition.module.css';\nimport Styles from './PhoneBookLogo.module.css';\n\nexport default class PhoneBookLogo extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n  };\n  state = {\n    isActive: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ isActive: true }), 300);\n  }\n  render() {\n    const { isActive } = this.state;\n    const { title } = this.props;\n    return (\n      <CSSTransition in={isActive} classNames={slideTransition} timeout={500}>\n        <div className={Styles.logo}>{title}</div>\n      </CSSTransition>\n    );\n  }\n}\n","import React from 'react';\nimport Section from '../components/Section/Section';\nimport PhoneBookFields from '../components/PhoneBookFields/PhoneBookFieldsContainer';\nimport PhoneBookList from '../components/PhoneBookList/PhoneBookListContainer';\nimport PhoneBookSearchField from '../components/PhoneBookSearchField/PhoneBookSearchFieldContainer';\nimport PhoneBookLogo from '../components/PhoneBookLogo/PhoneBookLogo';\n\nconst App = ({ phoneBookItems }) => (\n  <main>\n    <PhoneBookLogo title=\"PhoneBook\" />\n    <Section isActive>\n      <PhoneBookFields />\n    </Section>\n    <Section title={'Contacts'} isActive={phoneBookItems.length > 0}>\n      <PhoneBookSearchField isActive={phoneBookItems.length > 1} />\n      <PhoneBookList />\n    </Section>\n  </main>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getContacts } from '../redux/contactReducer/contactSelectors';\n\nconst mapStateToProps = state => ({\n  phoneBookItems: getContacts(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor } from './redux/store';\nimport { store } from './redux/store';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App/AppContainer';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTransition_enter__W_vVs\",\"enterActive\":\"slideTransition_enterActive__183ug\",\"exit\":\"slideTransition_exit__1KqNn\",\"exitActive\":\"slideTransition_exitActive__3j2qw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookFields_container__16G7O\",\"inputLabel\":\"PhoneBookFields_inputLabel__24mH1\",\"inputField\":\"PhoneBookFields_inputField__3Yfeb\",\"inputFieldError\":\"PhoneBookFields_inputFieldError__2vB1- PhoneBookFields_inputField__3Yfeb\",\"invalidMessage\":\"PhoneBookFields_invalidMessage__3zv43\",\"Btn\":\"PhoneBookFields_Btn__2aPAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"PhoneBookListItem_listItem__1QDcp\",\"name\":\"PhoneBookListItem_name__2S4fH\",\"Btn\":\"PhoneBookListItem_Btn__c1bDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__10K4X\",\"title\":\"Section_title__3n0_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookSearchField_container__3ZgDD\",\"searchField\":\"PhoneBookSearchField_searchField__lyfm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBookList_container__2OtkG\",\"listItem\":\"PhoneBookList_listItem__30Gbt\",\"name\":\"PhoneBookList_name__35_wq\",\"Btn\":\"PhoneBookList_Btn__5ETM3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"PhoneBookLogo_logo__2utsB\"};"],"sourceRoot":""}